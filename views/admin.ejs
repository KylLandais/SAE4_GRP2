<!DOCTYPE html>
<html lang="fr">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/css/style.css" />
    <link rel="shortcut icon" href="/favicon.ico" type="image/x-icon">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.2/html2pdf.bundle.js"></script>

    <title>Paneau Admin</title>
  </head>
  <body id="adminBody" data-theme="dark">
    <div>
      <a href="/" id="backButton" class="adminButton">Retour</a>
      <h1>Panneau d'administration</h1>
      <button id="themeSwitcher" class="headerButton" onclick="switchTheme(this)">Theme sombre</button>
      <a href="/admin/products/" class="adminButton">Gérer les produits</a>
      <a href="/admin/events/" class="adminButton">Gérer les Events</a>
    </div>

    <div class="adminItem" id="changePrice">
      <h3>Prix des grades :</h3>
      <div>
        <form
          id="changePriceForm"
          action="/admin/changePrice"
          method="POST"
          style="display: flex; flex-direction: column"
          class="adminForm"
        >
          <span
            ><label for="iron">Iron</label>
            <input
              type="number"
              name="ironprice"
              id="iron"
              class="gradeprice"
              disabled
              value="<%- ironprice %>"
            />
            <button type="button" onclick="enableInput('iron')">
              Modifier
            </button>
          </span>
          <span>
            <label for="gold">Gold</label>
            <input
              type="number"
              name="goldprice"
              id="gold"
              class="gradeprice"
              disabled
              value="<%- goldprice %>"
            />
            <button type="button" onclick="enableInput('gold')">
              Modifier
            </button>
          </span>
          <span>
            <label for="diamant">Diamant</label>
            <input
              type="number"
              name="diamantprice"
              id="diamant"
              class="gradeprice"
              disabled
              value="<%- diamantprice %>"
            />
            <button type="button" onclick="enableInput('diamant')">
              Modifier
            </button>
          </span>
          <button type="submit" style="display: none" id="validateForm">
            Valider
          </button>
        </form>
      </div>
    </div>
    <div class="adminItem">
      <h3>Ventes de grades</h3>
      <div id="gradesSales"></div>
    </div>
    
    <div class="adminItem" id="changeXp">
      <h3>Quantité d'xp que rapporte un event</h3>

      <form
        style="display: flex; flex-direction: column"
        id="changeXpForm"
        class="adminForm"
      >
        <span>
          <label for="xpAmount">Xp</label>
          <input
            type="number"
            name="xpAmount"
            id="xpAmount"
            class="gradeprice xpamount"
            value="<%- xpAmount %>"
          />
          <button type="submit">Valider</button>
        </span>
      </form>
      <h3>Seuil de renouvellement du grade</h3>
      <form
        style="display: flex; flex-direction: column"
        id="changeXpThresholdForm"
        class="adminForm"
      >
        <span>
          <label for="xpThreshold">Xp</label>
          <input
            type="number"
            name="xpThreshold"
            id="xpThreshold"
            class="gradeprice xpamount"
            value="<%- xpThreshold %>"
          />
          <button type="submit">Valider</button>
        </span>
      </form>
    </div>
    <div class="adminItem" id="sqlAdminItem">
      <h3>Requêtes SQL</h3>
      <a href="https://dbdiagram.io/d/647f713a722eb7749480d0c7"
        >Lien vers le diagramme de la BDD</a
      >
      <form
        style="display: flex; flex-direction: column"
        id="sqlForm"
        class="adminForm"
      >
        <span>
          <label for="sql">SQL</label>
          <input
            name="sql"
            id="sql"
            type="text"
            placeholder="SELECT * FROM users"
          ></input>
          <button type="submit">Envoyer</button>
        </span>
        <textarea
          name="sqlResults"
          disabled
          id="sqlResults"
          cols="30"
          rows="5"
          placeholder="Résultats de la requête"
        ></textarea>
      </form>
    </div>
    <div onload="showBannerInfo(this)" class="adminItem" id="callToActionBanner">
      <h3>Bannière publicitaire</h3>
      <form class="adminForm" id="changeBanner">
        <span>
          <span>
            <input type="checkbox" id="showBanner" name="showBanner">
            <label for="showBanner">Afficher</label>
          </span>
         <input type="color" id="bannerColor" name="bannerColor" value="#F55">
        </span>
        
        
        <input type="text" id="texteToShow" name="texteToShow" placeholder="Texte à afficher">
        <input type="text" id="link" name="link" placeholder="Lien">
        <input type="text" id="linkBody" name="linkBody" placeholder="Texte du lien">

        <input type="submit" value="Valider" class="adminStyleButton">
        
      </form>
    </div>
   
  </body>
  <script>
    const tableContainer = document.getElementById('adminBody');

    const extractNameFromEmail = (email) => {
      const parts = email.split('@')[0].split('.');
      const firstName = parts[0];
      const lastName = parts[1];

      return firstName + ' ' + lastName;
    };

    

    function searchUser(eventId) {
      //pop up
      const popup = document.createElement('div');
      popup.classList.add('popup');
      popup.setAttribute('id', 'popup');
      const popupContent = document.createElement('div');
      popupContent.classList.add('popupContent');
      
      const popupTitle = document.createElement('h3');
      popupTitle.classList.add('popupTitle');
      popupTitle.innerText = 'Ajouter un participant';
      const popupInput = document.createElement('input');
      popupInput.setAttribute('type', 'text');
      popupInput.setAttribute('id', 'searchUserInput');
      popupInput.setAttribute('name', 'searchUserInput');
      popupInput.classList.add('adminStyleInput');
      popupInput.setAttribute('placeholder', 'Rechercher un utilisateur');
      popupInput.addEventListener('input', (e) => {
        const value = e.target.value;
        if (value.length > 0) {
          fetch('/api/admin/searchUser', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ value, eventId }),
          })
            .then((res) => res.json())
            .then((data) => {
              showUsers(data.results, data.inscriptions, eventId);
            });
        } else {
          document.getElementById('searchUserResults').innerHTML = '';
        }
      });
      const popupClose = document.createElement('button');
      popupClose.innerText = 'Fermer';
      popupClose.setAttribute('onclick', 'closePopup()');
      popupClose.classList.add('adminStyleButton');
      popupClose.classList.add('closeButton');
      popupContent.appendChild(popupTitle);
      popupContent.appendChild(popupInput);
      popupContent.appendChild(popupClose);
      var searchUserResults = document.createElement('div');
      searchUserResults.setAttribute('id', 'searchUserResults');
      popupContent.appendChild(searchUserResults);

      popup.appendChild(popupContent);
      document.body.appendChild(popup);
      
      popupInput.focus();


      
    }

    function closePopup() {
      document.getElementById('popup').remove();
    }

    
    

    function enableInput(elem) {
      document.getElementById(elem).removeAttribute('disabled');
      document.getElementById('validateForm').style.display = 'block';

      //get the button that is sibbling to the input
      const button = document.getElementById(elem).nextElementSibling;

      button.innerText = 'Annuler';
      button.setAttribute('onclick', `disableInput('${elem}')`);
    }

    function disableInput(elem) {
      document.getElementById(elem).setAttribute('disabled', true);
      document.getElementById('validateForm').style.display = 'none';

      //get the button that is sibbling to the input
      const button = document.getElementById(elem).nextElementSibling;

      button.innerText = 'Modifier';
      button.setAttribute('onclick', `enableInput('${elem}')`);
    }

    document.querySelectorAll('.gradeprice:not(.xpamount)').forEach((elem) => {
      elem.setAttribute('disabled', true);
    });

    document
      .getElementById('changePriceForm')
      .addEventListener('submit', (e) => {
        e.preventDefault();
        const ironprice = document.getElementById('iron').value;
        const goldprice = document.getElementById('gold').value;
        const diamantprice = document.getElementById('diamant').value;
        const data = {
          ironprice,
          goldprice,
          diamantprice,
        };
        fetch('/api/admin/changeGradePrices', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data),
        }).then((res) => {
          if (res.status === 200) {
            userAlert('Prix modifiés');
            window.location.reload();
          } else {
            userAlert('Erreur lors de la modification des prix');
          }
        });
      });

    document.getElementById('changeXpForm').addEventListener('submit', (e) => {
      e.preventDefault();
      const xpAmount = document.getElementById('xpAmount').value;
      const data = {
        xpAmount,
      };
      fetch('/admin/changeXp', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      }).then((res) => {
        if (res.status === 200) {
          userAlert("Quantité d'xp que rapportent les events modifiée");
          window.location.reload();
        } else if (res.status === 400) {
          userAlert("La quantité d'xp doit être un nombre");
        } else {
          userAlert('Erreur lors de la modification des xp');
        }
      });
    });

    document
      .getElementById('changeXpThresholdForm')
      .addEventListener('submit', (e) => {
        e.preventDefault();
        const xpAmount = document.getElementById('xpThreshold').value;
        const data = {
          xpThreshold,
        };
        fetch('/api/admin/changeXpThreshold', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data),
        }).then((res) => {
          if (res.status === 200) {
            userAlert("Seuil d'xp pour renouveller le grade modifié");
            window.location.reload();
          } else if (res.status === 400) {
            userAlert("La quantité d'xp doit être un nombre");
          } else {
            userAlert('Erreur lors de la modification des xp');
          }
        });
      });

    document.getElementById('sqlForm').addEventListener('submit', (e) => {
      e.preventDefault();
      const sql = document.getElementById('sql').value;
      const data = {
        sql,
      };
      fetch('/api/admin/sql', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      })
        .then((res) => res.json())
        .then((data) => {
          //get the 'results' key from the data object
          document.getElementById('sqlResults').value = JSON.stringify(
            data.results
          );
          document.getElementById('sqlResults').style.width = 'fit-content';
        });
    });

    document.getElementById('startSemesterForm').addEventListener('submit', (e) => {
      e.preventDefault();
      var areYouSure = confirm('Voulez-vous vraiment mettre à jour les grades des utilisateurs ?');
      if(!areYouSure) return;

      fetch('/api/admin/updateGrades', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
      }).then((res) => {
        if (res.status === 200) {
          userAlert('Grades des utilisateurs mis à jour');
          window.location.reload();
        } else {
          userAlert('Erreur lors de la mise à jour des grades');
        }
      });
    });

    fetch('/api/admin/getGradesSales')
      .then((res) => res.json())
      .then((data) => {
        showGradesSales(data.grades);
      });




    function showGradesSales(gradeResults) {
      gradesSales = document.getElementById('gradesSales');
      gradesSales.innerHTML = '';

      if(gradeResults.length === 0) {
        const noSales = document.createElement('p');
        noSales.innerText = 'Aucune vente';
        gradesSales.appendChild(noSales);
      }

      gradeResults.forEach(grade => {
        const gradeName = grade.name;
        const gradeSales = grade.sales;

        const gradeContainer = document.createElement('div');
        gradeContainer.classList.add('gradeSalesContainer');

        const gradeNameP = document.createElement('p');
        gradeNameP.innerText = gradeName;

        const gradeSalesP = document.createElement('p');
        gradeSalesP.innerText = gradeSales;

        gradeContainer.appendChild(gradeNameP);
        gradeContainer.appendChild(gradeSalesP);

        gradesSales.appendChild(gradeContainer);
      });
    }

    document.getElementById('changeBanner').addEventListener(
      "submit",
      function(e) {
        e.preventDefault();
        const showBanner = document.getElementById('showBanner').checked;
        const color = document.getElementById('bannerColor').value;
        const textToShow = document.getElementById('texteToShow').value;
        const link = document.getElementById('link').value;
        const linkBody = document.getElementById('linkBody').value;
        const data = {
          showBanner,
          color,
          textToShow,
          link,
          linkBody
        };
        fetch('/api/admin/changeBanner', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data),
        }).then((res) => {
          if (res.status === 200) {
            userAlertGood('Bannière modifiée');
          } else {
            userAlert('Erreur lors de la modification de la bannière');
          }
        });
      }
    )

    function showBannerInfo(element){
      fetch('/api/getBannerInfo')
        .then((res) => res.json())
        .then((data) => {
          if(data.showBanner) {
            element.querySelector('#showBanner').checked = true;
          }
          element.querySelector('#bannerColor').value = data.color;
          element.querySelector('#texteToShow').value = data.textToShow;
          element.querySelector('#link').value = data.link;
          element.querySelector('#linkBody').value = data.linkBody;
        });
    }

    showBannerInfo(document);
      

  </script>
  <script src="/js/logic.js"></script>
</html>
